# I have created a comprehensive table for all the items available in the store, incorporating five columns to accommodate the necessary data. The inventory comprises a minimum of 15 items, and I have utilized select statements to arrange the items based on price and present at least one statistical detail regarding them.

# 1-Create a table named "store" with the specified columns: "item_id" (primary key of integer data type), "category" (text data type), "item_name" (text data type), "unit_price_usd" (real data type), and "quantity" (integer data type). The "primary key" constraint ensures that each "item_id" value is unique within the table.
 
CREATE TABLE store
(item_id INTEGER primary key, category TEXT, item_name TEXT, unit_price_usd REAL, quantity INTEGER);

# 2- This line inserts a new row into the "store" table. The values provided correspond to the columns in the table, in the same order they were defined.

INSERT INTO store values
(item_id,"category", "item_name", price, quantity);

INSERT INTO store values (1,"knitwear", "Cotton Linen Ribbed Knit Polo", 180, 40);
INSERT INTO store VALUES (2,"knitwear", 
"Cotton and Silk Piqué Polo", 120.80, 21);
INSERT INTO store VALUES (3,"knitwear", 
"Polo shirt in Cotton Twist", 140, 34);
INSERT INTO store values (4,"knitwear", "Cotton T-shirt Twist", 100, 24);
INSERT INTO store VALUES (5,"jacket/blazer", 
"Linen Shirt Jacket", 320, 70);
INSERT INTO store VALUES (6,"jacket/blazer", 
"Cable-Knit Cotton Jersey Jacket", 340, 50);
INSERT INTO store VALUES (7,"jacket/blazer", 
"Cashmere jersey jacket", 1100, 5);
INSERT INTO store VALUES (8,"pants", 
"Cropped Cotton Chino Pants", 110, 20);
INSERT INTO store values (9,"knitwear", "Cotton Linen Ribbed Knit Polo", 180, 40);
INSERT INTO store VALUES (10,"pants", 
"Lightweight Chino Pants", 280, 21);
INSERT INTO store VALUES (11,"pants", 
"Ultrasoft Cashmere Pants", 440, 34);
INSERT INTO store values (12,"pants", "Cotton Linen Cotton Chino Pants", 190, 24);
INSERT INTO store VALUES (13,"shirt",
"Linen Shirt", 220, 70);
INSERT INTO store VALUES (14,"shirt",
"Short-Sleeved Cotton and Silk Jersey", 210, 50);
INSERT INTO store VALUES (15,"shirt",
"Cotton and Silk Piqué Shirt", 200, 5);


#By executing these SQL statements, you would create the "store" table and populate it with the provided data.

# 3- Adding the line SELECT * FROM store; to the SQL code allows you to retrieve all the rows and columns from the "store" table. 

SELECT * FROM store;


